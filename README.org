* Tabs and ribbons for the mode line

This package provides utilities for displaying elements of the
mode line as tabs and ribbons.  It also provides replacements
for a few built-in elements.

[[http://readme.emacsair.me/moody.png]]

- Make sure that the face ~mode-line~ does not set ~:box~ and
  that either ~:underline~ and ~:overline~ are the same color
  and the ~:position~ property of ~:underline~ is non-nil, or
  ~:underline~ and ~:overline~ are both ~undefined~.  If
  defined, then the line color should be different from the
  ~:background~ colors of both ~mode-line~ and ~default~.  The
  same rules apply to ~mode-line-inactive~.  The line colors of
  ~mode-line~ and ~mode-line-inactive~ do not necessarily have
  to be identical.  For example:

  #+begin_src emacs-lisp
    (use-package solarized-theme
      :config
      (load-theme 'solarized-light t)
      (let ((line (face-attribute 'mode-line :underline)))
        (set-face-attribute 'mode-line          nil :overline   line)
        (set-face-attribute 'mode-line          nil :underline  (:color line :position t))
        (set-face-attribute 'mode-line-inactive nil :overline   line)
        (set-face-attribute 'mode-line-inactive nil :underline  (:color line :position t))
        (set-face-attribute 'mode-line          nil :box        nil)
        (set-face-attribute 'mode-line-inactive nil :box        nil)
        (set-face-attribute 'mode-line-inactive nil :background "#f9f2d9")))
  #+end_src

  If your Emacs version is older than 29.1, then the ~:underline~
  attribute does not accept the ~:position~ property, so you should
  set ~:underline~ to simply ~line~ in the above example.

- Note that the above example is for ~solarized-theme~ and that for
  your theme ~(face-attribute 'mode-line :underline)~ may return nil.
  If you want borders, use something like ~(let ((line "red")) ...)~,
  in that case.

- Add something like this to your init file:

  #+begin_src emacs-lisp
    (use-package moody
      :config
      (moody-replace-mode-line-buffer-identification)
      (moody-replace-vc-mode)
      (moody-replace-eldoc-minibuffer-message-function))
  #+end_src

  If your Emacs version is older than 29.1, then include
  ~(setq x-underline-at-descent-line t)~ in addition to the above.

- Such replacement functions are defined as commands, making it
  quicker to try them out without having to add anything to your
  init file.

- To undo the call to a ~moody-replace-*~ function, call the same
  function with ~t~ as the value of the optional REVERSE argument.
  You can accomplish the same by interactively calling such a
  command with a prefix argument.

#+html: <br><br>
#+html: <a href="https://github.com/tarsius/moody/actions/workflows/compile.yml"><img alt="Compile" src="https://github.com/tarsius/moody/actions/workflows/compile.yml/badge.svg"/></a>
#+html: <a href="https://stable.melpa.org/#/moody"><img alt="MELPA Stable" src="https://stable.melpa.org/packages/moody-badge.svg"/></a>
#+html: <a href="https://melpa.org/#/moody"><img alt="MELPA" src="https://melpa.org/packages/moody-badge.svg"/></a>
